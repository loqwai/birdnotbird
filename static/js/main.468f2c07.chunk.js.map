{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["sample","items","Math","floor","random","length","useRandomBird","React","useState","bird","setBird","data","setData","useEffect","a","fetch","res","text","real_birds","split","fake_birds","useData","key","undefined","Chooser","onAnswer","className","onClick","App","resetBird","answer","setAnswer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAgCMA,EAAS,SAAgBC,GAE7B,OAAOA,EADOC,KAAKC,MAAMD,KAAKE,SAAWH,EAAMI,UAS3CC,EAAgB,WAAuC,IAAD,EAClCC,IAAMC,WAD4B,mBACnDC,EADmD,KAC7CC,EAD6C,KAEpDC,EAlCQ,WAAO,IAAD,EACIJ,IAAMC,SAAe,IADzB,mBACbG,EADa,KACPC,EADO,KAmBpB,OAhBAL,IAAMM,WAAU,WACd,sBAAC,8BAAAC,EAAA,sEACmBC,MAAM,kBADzB,cACOC,EADP,gBAE2BA,EAAIC,OAF/B,OAEOC,EAFP,OAEuCC,MAAM,MAC5CP,GAAQ,SAAAD,GAAI,kCAAUA,GAAV,IAAgBO,kBAH7B,0CAAD,KAKC,IAEHX,IAAMM,WAAU,WACd,sBAAC,8BAAAC,EAAA,sEACmBC,MAAM,kBADzB,cACOC,EADP,gBAE2BA,EAAIC,OAF/B,OAEOG,EAFP,OAEuCD,MAAM,MAC5CP,GAAQ,SAAAD,GAAI,kCAAUA,GAAV,IAAgBS,kBAH7B,0CAAD,KAKC,IAEIT,EAeMU,GAcb,OAVAd,IAAMM,WAAU,WACd,GAAKF,EAAKO,YAAeP,EAAKS,aAC1BX,EAAJ,CAEA,IAAMa,EAAMtB,EAAe,CAAC,aAAc,eACpCiB,EAAOjB,EAAOW,EAAKW,IAEzBZ,EAAQ,CAAEY,MAAKL,YACd,CAACN,EAAMF,IAEH,CAACA,EAZM,kBAAMC,OAAQa,MAexBC,EAAU,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,SACjB,OAAQ,qCACN,wBAAQC,UAAU,OAAOC,QAAS,kBAAMF,EAAS,eAAjD,kBACA,wBAAQC,UAAU,OAAOC,QAAS,kBAAMF,EAAS,eAAjD,sBAyCWG,MArCf,WAAgB,IAAD,EACatB,IADb,mBACNG,EADM,KACAoB,EADA,OAEetB,IAAMC,WAFrB,mBAENsB,EAFM,KAEEC,EAFF,KAUb,OAAKtB,EAGH,qBAAKiB,UAAU,MAAf,SACE,sBAAKA,UAAU,UAAf,UACE,4BAAIjB,EAAKQ,OAERa,GACC,gCACE,6BAAKA,IAAWrB,EAAKa,IAAM,WAAa,WAExC,8CACe,iCAAsB,eAAbb,EAAKa,IAAuB,OAAS,eAMhEQ,EACG,wBAAQJ,UAAU,YAAYC,QAzB1B,WACZI,OAAUR,GACVM,KAuBQ,uBACA,cAAC,EAAD,CAASJ,SAAUM,SApBX,MChELC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.468f2c07.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\ntype Choice = 'real_birds' | 'fake_birds'\n\ntype Data = {\n  [choice in Choice]: string[];\n};\n\nconst useData = () => {\n  const [data, setData] = React.useState<Data>({} as Data)\n\n  React.useEffect(() => {\n    (async () => {\n      const res = await fetch('real_birds.txt')\n      const real_birds = (await res.text()).split('\\n') as string[];\n      setData(data => ({ ...data, real_birds }))\n    })()\n  }, [])\n\n  React.useEffect(() => {\n    (async () => {\n      const res = await fetch('fake_birds.txt')\n      const fake_birds = (await res.text()).split('\\n') as string[];\n      setData(data => ({ ...data, fake_birds }))\n    })()\n  }, [])\n\n  return data\n}\n\nconst sample = <T extends any>(items: T[]): T => {\n  const index = Math.floor(Math.random() * items.length)\n  return items[index]\n}\n\ninterface Bird {\n  key: Choice;\n  text: string;\n}\n\nconst useRandomBird = (): [Bird | undefined, () => void] => {\n  const [bird, setBird] = React.useState<Bird>()\n  const data = useData()\n\n  const reset = () => setBird(undefined)\n\n  React.useEffect(() => {\n    if (!data.real_birds || !data.fake_birds) return;\n    if (bird) return;\n\n    const key = sample<Choice>(['real_birds', 'fake_birds'])\n    const text = sample(data[key])\n\n    setBird({ key, text })\n  }, [data, bird])\n\n  return [bird, reset]\n}\n\nconst Chooser = ({ onAnswer }: { onAnswer: (answer: Choice) => void }) => {\n  return (<>\n    <button className=\"Real\" onClick={() => onAnswer('real_birds')}>Real</button>\n    <button className=\"Fake\" onClick={() => onAnswer('fake_birds')}>Fake</button>\n  </>);\n}\n\nfunction App() {\n  const [bird, resetBird] = useRandomBird()\n  const [answer, setAnswer] = React.useState<Choice | undefined>()\n\n  const reset = () => {\n    setAnswer(undefined)\n    resetBird();\n  }\n\n\n  if (!bird) return null\n\n  return (\n    <div className=\"App\">\n      <div className=\"Content\">\n        <p>{bird.text}</p>\n\n        {answer && (\n          <div>\n            <h1>{answer === bird.key ? 'Correct!' : 'Wrong!'}</h1>\n\n            <p>\n              This bird is <strong>{bird.key === 'real_birds' ? 'real' : 'fake'}</strong>\n            </p>\n          </div>\n        )}\n\n\n        {answer\n          ? <button className=\"Try-Again\" onClick={reset}>Try Again</button>\n          : <Chooser onAnswer={setAnswer} />\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}